$(document).ready(function(){
	//If there's already a canvas loaded or it's the wrong page, don't load this page
	if($("canvas").size() > 0 || $(".tower.index").length == 0){
		return false;
	}

	var sketch = function(p){
		const BRICKS = <%= Global.tower.shipment %>;
		const SHIPMENTSIZE = <%= Global.tower.shipment_size %>

		var USER_ID;
		var tower = [];
		var maxLevel = false;

		var arrow_width;

		//-----------------------------------P5 FUNCTIONS---------------------------------------------
		p.setup = function(){
			canvas = p.createCanvas(p.windowWidth - 550, <%= Global.tower.brick_height %> * <%= Rails.configuration.x.level_height %>);
			canvas.parent("canvas");

			Brick.level = 0;
			loadTower(Brick.level);
			loadOrders(Brick.level, 0);

			$.get('/session.json', function(data){
				USER_ID = data;
			});

			arrow_width = <%= Global.tower.brick_width %>;

			background = p.loadImage("../level_one.jpg");
		};

		p.draw = function(){
			p.background(173,216,230);

			//Draws the bricks from the tower
			p.stroke(0);
			p.strokeWeight(1);
			for(var i = 0; i < tower.length; i++){
				tower[i].draw();
			}

			//Draw navigation arrows
			p.fill(100);
			//Up and down arrows
			if(p.mouseY < arrow_width){
				p.triangle(p.width/2, 5, p.width/2 - 40, (arrow_width-10)/2, p.width/2 + 40, (arrow_width-10)/2);
			}else if(p.mouseY > p.height - arrow_width){
				p.triangle(p.width/2, p.height-5, p.width/2 - 40, p.height - (arrow_width-10)/2, p.width/2 + 40, p.height - (arrow_width-10)/2);
			}

			//Left and right arrows
			if(p.mouseX < arrow_width){
				p.triangle(5, p.height/2, arrow_width-10, p.height/2 - 40, arrow_width - 10, p.height/2 + 40);
			}else if(p.mouseX > p.width - arrow_width){
				p.triangle(p.width - 5, p.height/2, p.width - arrow_width+10, p.height/2 - 40, p.width - arrow_width + 10, p.height/2 + 40);
			}

			//Move right and left
			if(p.mouseX < arrow_width && p.mouseX > 0 && p.mouseY > p.height/2 - 40 && p.mouseY < p.height/2 + 40){
				Brick.moveLeft();
			}else if(p.mouseX > p.width-arrow_width && p.mouseX < p.width && p.mouseY > p.height/2 - 40 && p.mouseY < p.height/2 + 40){
				Brick.moveRight();
			}

			//This is where the mouse stuff for the up and down would go
			if(p.mouseY < arrow_width && p.mouseY > 0 && p.mouseX > p.width/2 - 40 && p.mouseX < p.width/2 + 40){
				Brick.moveUp();
			}else if(p.mouseY > p.height-Brick.BRICK_WIDTH && p.mouseY < p.height && p.mouseX > p.width/2 - 40 && p.mouseX < p.width/2 + 40){
				Brick.moveDown();
			}
		};

		p.mouseMoved = function(){
			//Find the brick they just moused over
			var index = overBrick(p.mouseX, p.mouseY)
			if(index != -1){
				$("#info").html(tower[index].getInfo());
			}else{
				$("#info").html("");
			}
		};

		function overBrick(x, y){
			for(var i = 0; i < tower.length; i++){
				if(tower[i].isWithin(x, y)){
					return i;
				}
			}
			return -1;
		}

		p.keyPressed = function(){
			switch(p.keyCode){
				case 39: //Right arrow key, move around tower
					Brick.moveRight();
					break;
				case 37: //Left arrow key, move around tower
					Brick.moveLeft();
					break;
				case 38: //Up arrow key, move up a level
					Brick.moveUp();
					break;
				case 40: //Down arrow key, move down a level
					Brick.moveDown();
					break;
				case 81: //Zoom out
					Brick.makeSmaller();
					break;
				case 90: //Zoom in
					Brick.makeLarger();
					break;
				default:
					//Do nothing
			}
		};

		//------------------------------------------OTHER FUNCTIONS------------------------------------
		//Loads the tower from the server
		function loadTower(requestedLevel){
			tower = [];
			$.get('/tower.json', function(data){
				if(data.length == 0){
					maxLevel = true;
				}else{
					maxLevel = false;
					for(var i = 0; i < data.length; i++){
						tower.push(new Brick(data[i]["x"], data[i]["y"], p, data[i]["color"], data[i]["strength"]));
						tower[tower.length - 1].setInfo(data[i]["info"]);
					}
				}
			});
		}

		//Sets the new background
		function setBackground(level){
			var index = Math.min(level, backgrounds.length - 1);
			background = p.loadImage("../" + backgrounds[index]);
		}
	};

	var myp5 = new p5(sketch);
});