$(document).ready(function(){
	//If there's already a canvas loaded or it's the wrong page, don't load this page
	if($("canvas").size() > 0 || $(".tower.index").length == 0){
		return false;
	}

	var sketch = function(p){
		const BRICKS = <%= Global.tower.shipment %>;
		const SHIPMENTSIZE = <%= Global.tower.shipment_size %>

		var USER_ID;
		var tower = [];
		var maxLevel = false;

		var background;
		var backgrounds = ["level_one.jpg", "level_two.jpg", "level_three.jpg", "level_four.jpg", "level_five.jpg", "level_six.jpg"];

		//-----------------------------------P5 FUNCTIONS---------------------------------------------
		p.setup = function(){
			canvas = p.createCanvas(p.windowWidth - 550, <%= Global.tower.brick_height %> * <%= Rails.configuration.x.level_height %>);
			canvas.parent("canvas");

			Brick.level = 0;
			loadTower(Brick.level);
			loadOrders(Brick.level, 0);

			$.get('/session.json', function(data){
				USER_ID = data;
			});

			background = p.loadImage("../level_one.jpg");
		};

		p.draw = function(){
			p.image(background, 0, 0, background.width, background.height, 0, 0, p.width, p.height);

			//Draws the bricks from the tower
			p.stroke(0);
			p.strokeWeight(1);
			for(var i = 0; i < tower.length; i++){
				tower[i].draw();
			}
		};

		p.mouseMoved = function(){
			
		};

		p.keyPressed = function(){
			switch(p.keyCode){
				case 39: //Right arrow key, move around tower
					Brick.moveRight();
					break;
				case 37: //Left arrow key, move around tower
					Brick.moveLeft();
					break;
				case 38: //Up arrow key, move up a level
					if(!maxLevel){
						Brick.level++;
						loadTower(Brick.level);
						loadOrders(Brick.level, 0);
						setBackground(Brick.level);
					}
					break;
				case 40: //Down arrow key, move down a level
					if(Brick.level > 0){
						Brick.level--;
						loadTower(Brick.level);
						loadOrders(Brick.level, 0);
						setBackground(Brick.level);
					}
					break;
				case 81: //Zoom out
					Brick.makeSmaller();
					break;
				case 90: //Zoom in
					Brick.makeLarger();
					break;
				default:
					//Do nothing
			}
		};

		//------------------------------------------OTHER FUNCTIONS------------------------------------
		//Loads the tower from the server
		function loadTower(requestedLevel){
			tower = [];
			$.get('/tower.json', {level: requestedLevel}, function(data){
				if(data.length == 0){
					maxLevel = true;
				}else{
					maxLevel = false;
					for(var i = 0; i < data.length; i++){
						tower.push(new Brick(data[i]["x"], data[i]["y"], p, data[i]["color"], data[i]["strength"]));
					}
				}
			});
		}

		//Sets the new background
		function setBackground(level){
			var index = Math.min(level, backgrounds.length - 1);
			background = p.loadImage("../" + backgrounds[index]);
		}
	};

	var myp5 = new p5(sketch);
});